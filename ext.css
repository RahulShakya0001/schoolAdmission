* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: sans-serif;
}
::-webkit-scrollbar{
    width: 0;
}
:root {
    --background-color: #2c3e50; /* Dark sidebar background */
    --box-bg-color: #34495e; /* Box color */
    --text-color: white;
    --hover-bg-color: #1abc9c;
    --link-hover-color: white;
}

.left-box-inner {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 2rem;
    width: 260px; /* Sidebar width */
    height: 100vh;
    background-color: var(--background-color);
    border-right: 2px solid var(--box-bg-color);
    transition: width 0.3s ease-in-out;
}

/* Sidebar Logo */
.box1-logo {
    height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-bottom: 2px solid var(--box-bg-color);
    width: 100%;
}
.box1-logo img {
    width: 70px;
}

/* Sidebar Links */
.text-box {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 90%;
    height: 50px;
    margin-bottom: 1rem;
    border-radius: 10px;
    background-color: var(--box-bg-color);
    transition: all 0.3s ease-in-out;
    cursor: pointer;
}

.text-box:hover {
    background-color: var(--hover-bg-color);
    transform: scale(1.05);
}

.text-box a {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    width: 100%;
    height: 100%;
    padding-left: 20px;
    color: var(--text-color);
    text-decoration: none;
    font-weight: bold;
    font-size: 1.2rem;
    transition: color 0.3s ease-in-out;
}

.text-box a:hover {
    color: var(--link-hover-color);
}

/* Sidebar Responsive Collapse */
@media screen and (max-width: 768px) {
    .left-box-inner {
        width: 80px;
        align-items: center;
    }
    
    .text-box {
        width: 80%;
        justify-content: center;
    }

    .text-box a {
        display: none;
    }

    .box1-logo img {
        width: 50px;
    }
}












const getFromLocalStorage = (key) => JSON.parse(localStorage.getItem(key)) ?? [];
const saveToLocalStorage = (key, value) => localStorage.setItem(key, JSON.stringify(value));
const removeFromLocalStorage = (key) => localStorage.removeItem(key);

let login = getFromLocalStorage("Login");
const path = window.location.pathname;
console.log(path);
if (path == '/' || path == '/index.html' || path == '') {
    if (login) {
        window.location.href = '../dashboard/02_dashboard.html';
    }
}
else {
    if (login === null) {
        window.location.href = '/';
    }
}
const emptyDbTable = (tableName) => {
    if (db.hasOwnProperty(tableName)) {
        db[tableName] = [];
        alert(`Table ${tableName} has been emptied.`);
        saveToLocalStorage("Database", db);
    } else {
        console.error(`Table ${tableName} does not exist in the database.`);
    }
};

// Get Data by ID
const get_data_by_id = (key, id) => db[key]?.find((v) => v.id == id);


function get_user_data(key, id, relation_table_name) {
    return db[key].find((v, i) => v.relation_id == id && v.relation_table == relation_table_name)
}


// left sidebar based on user role
const setSidebar = (userRole) => {
    let html = `<div class="dashboard text-box">
                    <a href="/dashboard/02_dashboard.html">Dashboard</a>
                </div>`;

    if (userRole === 1) { // Admin
        html += `
            <div class="teacher text-box"><a href="/Teacher/03_addTeacher.html">Teacher</a></div>
            <div class="student text-box"><a href="/Student/04_addStudent.html">Student</a></div>
            <div class="add-class text-box"><a href="/Class/05_addClass.html">Add Class</a></div>
            <div class="add-subject text-box"><a href="/Subject/06_addSubject.html">Add Subject</a></div>
            <div class="attendance-checker text-box"><a href="/Teacher/attendance.html">Attendance</a></div>
            <div class="exam-main text-box"><a href="/Teacher/exam.html">Exam</a></div>
            <div class="exam-main-assign text-box"><a href="/Teacher/exam_assign.html">Assign Exam</a></div>
        `;
    } else if (userRole === 2) { // Teacher
        html += `
            <div class="student text-box"><a href="/Student/04_addStudent.html">Student</a></div>
            <div class="attendance text-box"><a href="/Teacher/attendance.html">Attendance</a></div>
            <div class="homework text-box"><a href="/Teacher/homework.html">Homework</a></div>
        `;
    } else if (userRole === 3) {
        html += `
        <div class="schedule text-box"><a href="/Student/class_schedule.html">Schedule</a></div>
        <div class="fees-details text-box"><a href="/Student/fee.html">Fees Details</a></div>
        <div class="student_homework text-box"><a href="/Student/homework.html">Homework</a></div>
        <div class="exam text-box"><a href="/Student/exam.html">Exam</a></div>
    `;
    }
    html += `<div class="text-box"><a class="log-out" href="/index.html">Log-out</a></div>`;
    $(".left-box-inner").html(html);
}

const setupStudentDashboard = () => {
    let studentData = getDataById("student", login?.relation_id);
    if (!studentData) return console.error("Student data not found!");

    let userData = getUserData("users", login?.relation_id, "student");
    if (!userData) return console.error("User data not found!");

    let classData = getDataById("class", studentData.class);
    if (!classData) return console.error("Class data not found!");

    $(".student_name").text("Name : " + userData.name);
    $(".student_class").text("Class : " + classData.class);
    $(".student_father").text("Father Name : " + studentData.fatherName);
    $(".student_phone_number").text("Phone No : " + studentData.phoneNumber);
    $(".student_address").text("Address : " + studentData.address);
};

    

if (login) {
    setSidebar(login.user_role);
    if (login.user_role === 3) {
        setupStudentDashboard();
        $(".front-preview").css("display", "flex");
        $(".center-line").css("display", "none");
    }
}


$(".log-out").click(() => removeFromLocalStorage("Login"));